version: "3.9"

services:
  tms-database:
    container_name: tms-database
    image: postgres:${TMS_DB_VERSION}
    restart: always
    environment:
      - POSTGRES_DB=${TMS_DB_NAME}
      - POSTGRES_USER=${TMS_DB_USER}
      - POSTGRES_PASSWORD=${TMS_DB_PASSWORD}
      - PGPORT=${TMS_DB_PORT}
      - PGTZ=${TMS_TZ}
    expose:
      - ${TMS_DB_PORT}
    ports:
      - ${TMS_DB_PORT}:${TMS_DB_PORT}
    volumes:
      - tms-volume
    networks:
      - tms-network

  tms-backend:
    container_name: tms-backend
    build:
      context: backend/.
    restart: always
    env_file:
      - .env
    environment:
      - TZ=${TMS_TZ}
    expose:
      - ${TMS_BE_PORT}
    ports:
      - ${TMS_BE_PORT}:${TMS_BE_PORT}
    depends_on:
      - tms-database
    networks:
      - tms-network

  tms-mail-service:
    container_name: tms-mail-service
    build:
      context: mail-service/.
    restart: always
    env_file:
      - .env
    environment:
      - TZ=${TMS_TZ}
    expose:
      - ${TMS_MS_PORT}
    ports:
      - ${TMS_MS_PORT}:${TMS_MS_PORT}
    networks:
      - tms-network

  # А как это гавно поднять?
  tms-nginx:
    container_name: tms-nginx
    build:
      context: frontend/.
    restart: always
    env_file:
      - .env
    ports:
      - 7500:80
    expose:
      - 80
      - 443:443
    volumes:
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - tms-backend
    networks:
      - tms-network

  # Для чего сертбот в контейнере?
  # tms-certbot:
  #   image: certbot/certbot
  #   container_name: tms-certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - tms-nginx
  #   command: certonly --webroot --webroot-path=/var/www/html --force-renewal --email seasle98@gmail.com -d seasky.space, www.seasky.space --agree-tos

volumes:
  tms-volume:
    name: tms-volume
    driver: local
  # certbot-etc:
  # certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /root/frontend/build
      o: bind

networks:
  tms-network:
    name: tms-network
    driver: bridge